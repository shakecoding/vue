▷ (단일 파일) 컴포넌트 기반 Vue 애플리케이션 개발
    한 파일에 컴포넌트 구성을 위해 필요한 템플릿, 스크립트, 스타일 정보를 모두 포함하기 때문에
    컴포넌트 단위로 관심사를 분리시킬 수 있다.
    개발 프로젝트 환경 설정은 쉽지 않기에 프로젝트 설정 도구를 이용한다.

▷ Vue 프로젝트 설정 도구
    1) Vue CLI 도구
        webpack 기반 (자바스크립트로 만들어짐.)
        한 때 Vue 공식 프로젝트 설정 도구 였으나 현재는 잘 사용하지 않고 있다.
        초기 빌드시 모든 모듈을 번들링한다.
        기능은 좋지만 관련된 모듈들 하나하나가 크기가 크기 때문에 다운로드가 오래 걸리고,
        웹서버를 구동하기 위한 작업도 오래 걸리기에 다른 도구로 대체됨.
    
    2) Vite 기반 도구 [비트, 프랑스어로 빠르다]
        ESBuild 기반 (Go 언어로 만들어짐.) 10배 정도 빠름.
        필요할 때만 번들링을 수행, 초기 빌드 시간을 크게 단축.
        기존 도구와 비교해 설정이 간편하고 직관적이고, 개발 생산성이 높다.

▶ 프로젝트 만들기
    1) 프로젝트를 만들고 싶은 경로에서 터미널 실행
    2) npm create vite@latest <- vite 도구를 이용하여 프로젝트 생성
    3) 프로젝트 이름, 템플릿 설정
    4) 만들어진 프로젝트로 경로 바꾸기
    5) npm install <- 종속성 설치
    6) npm run dev <- vite 기반 Vue 애플리케이션 실행
    [ 새로운 프로젝트 만들 때 마다 새롭게 만들어줘야함! 복사 붙여넣기 하면 헷갈림!]

▶ 프로젝트 설정 // 이건 건너 뛰자.
    Project name:
	    프로젝트의 이름을 지정합니다. 프로젝트 폴더의 이름이 됩니다.

    TypeScript:
        No: JavaScript를 사용합니다.
        Yes: TypeScript를 사용합니다. TypeScript는 JavaScript의 상위 집합으로, 정적 타입 체킹과 최신 JavaScript 기능을 제공합니다.

    JSX/TSX Support:
        No: JSX/TSX를 사용하지 않습니다.
        Yes: JSX/TSX를 사용합니다. JSX는 React와 같은 라이브러리에서 컴포넌트를 선언할 때 사용됩니다.

    Vue Router for Single Page Application:
        No: Vue Router를 포함하지 않습니다.
        Yes: Vue Router를 포함합니다. Vue Router는 Vue.js 애플리케이션에서 라우팅을 관리하는 공식 라이브러리입니다.

    Pinia for State Management:
        No: Pinia를 포함하지 않습니다.
        Yes: Pinia를 포함합니다. Pinia는 Vuex를 대체하는 Vue.js의 상태 관리 라이브러리입니다.

    Vitest for Unit Testing:
        No: Vitest를 포함하지 않습니다.
        Yes: Vitest를 포함합니다. Vitest는 Vite와 통합된 테스트 프레임워크로, 유닛 테스트를 작성할 수 있게 해줍니다.

    Cypress for End-to-End Testing:
        No: Cypress를 포함하지 않습니다.
        Yes: Cypress를 포함합니다. Cypress는 엔드 투 엔드 테스트 프레임워크로, 애플리케이션을 실제로 실행하면서 테스트를 할 수 있게 해줍니다.

    ESLint for Code Linting:
        No: ESLint를 포함하지 않습니다.
        Yes: ESLint를 포함합니다. ESLint는 코드 품질을 보장하기 위해 JavaScript 및 Vue 코드에서 오류와 일관성 문제를 찾아줍니다.

▶ 프로젝트 구성
    1) src : .js, .vue 파일을 작성하는 곳, 시작파일은 src/main.js
    2) public 이미지와 등 정리
    [ 3) dist 빌드 후 생성된 산출물이 저장하는 파일 ]
    4) index.html : Vue 애플리케이션의 컴포넌트 트리는 index.html의 id가 app인 div 요소 내부에 랜더링.

▶ 살펴보기
    - main.js  <- 프로젝트의 시작 지점
    - App.vue <- 단일 파일 컴포넌트 
    - componets 폴더 안 여러가지 컴포넌트 확인!

